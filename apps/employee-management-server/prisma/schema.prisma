datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Notification {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  message   String?
  recipient String?
  timestamp DateTime?
  title     String?
  updatedAt DateTime  @updatedAt
}

model Report {
  createdAt   DateTime          @default(now())
  description String?
  id          String            @id @default(cuid())
  status      EnumReportStatus?
  submittedBy String?
  title       String?
  updatedAt   DateTime          @updatedAt
}

model Meeting {
  createdAt DateTime  @default(now())
  date      DateTime?
  details   String?
  id        String    @id @default(cuid())
  title     String?
  updatedAt DateTime  @updatedAt
}

model Task {
  assignedTo  String?
  createdAt   DateTime        @default(now())
  deadline    DateTime?
  description String?
  id          String          @id @default(cuid())
  status      EnumTaskStatus?
  title       String?
  updatedAt   DateTime        @updatedAt
}

model Attendance {
  createdAt  DateTime              @default(now())
  date       DateTime?
  employee   Employee?             @relation(name: "AttendancesOnEmployee", fields: [employeeId], references: [id])
  employeeId String?
  employees  Employee[]            @relation(name: "AttendanceOnEmployees")
  id         String                @id @default(cuid())
  status     EnumAttendanceStatus?
  updatedAt  DateTime              @updatedAt
}

model Employee {
  attendance      Attendance?  @relation(name: "AttendanceOnEmployees", fields: [attendanceId], references: [id])
  attendanceId    String?
  attendances     Attendance[] @relation(name: "AttendancesOnEmployee")
  createdAt       DateTime     @default(now())
  employeeId      String?
  id              String       @id @default(cuid())
  personalDetails Json?
  updatedAt       DateTime     @updatedAt
}

model User {
  accountType   EnumUserAccountType?
  contactNumber String?
  createdAt     DateTime             @default(now())
  dateOfBirth   DateTime?
  email         String?              @unique
  firstName     String?
  fullName      String?
  id            String               @id @default(cuid())
  lastName      String?
  password      String
  roles         Json
  updatedAt     DateTime             @updatedAt
  username      String               @unique
}

enum EnumReportStatus {
  Option1
}

enum EnumTaskStatus {
  Option1
}

enum EnumAttendanceStatus {
  Option1
}

enum EnumUserAccountType {
  Option1
}
